inv_dev/
├── __init__.py
├── __manifest__.py

└── models/
    └── __init__.py
    └── product_extension_wizard.py

└── views/
    └── inv_model_views.xml

└── security/
    └── ir.model.access.csv

tengo el siguiente modelo 

from odoo import models, fields, api
import os
import logging

_logger = logging.getLogger(__name__)

class Codigo(models.Model):
    _name = 'product.codigo'
    _description = 'Codigo'

    name = fields.Char(string="Codigo")

class Numero(models.Model):
    _name = 'product.numero'
    _description = 'Numero'

    name = fields.Char(string="Numero")

class Cantidad(models.Model):    
    _name = 'product.cantidad'
    _description = 'Cantidad'

    name = fields.Float(string="Cantidad", default=0.0)

class ProductExtensionWizard(models.TransientModel):
    _name = 'product.extension.wizard'
    _description = 'Product Extension Wizard'

    id_codigo = fields.Many2one('product.codigo', string="Codigo", required=True)
    id_numero = fields.Many2one('product.numero', string="Numero", required=True)
    cantidad = fields.Float(string="Cantidad", default=0.0, required=True)
    name = fields.Char(string="Nombre")
    zpl_content = fields.Text(string="ZPL Content", readonly=True)
    active = fields.Boolean(string="Active", default=True)

    @api.model
    def generate_zpl_label(self, vals):
        if isinstance(vals, models.BaseModel):
            vals = vals.read()[0]  
        elif isinstance(vals, list):
            vals = vals[0] 

        codigo = self.env['product.codigo'].browse(vals.get('id_codigo'))
        if not codigo.exists():
            raise ValueError(f"El registro product.codigo con ID {vals.get('id_codigo')} no existe.")
        numero = self.env['product.numero'].browse(vals.get('id_numero'))
        if not numero.exists():
            raise ValueError(f"El registro product.numero con ID {vals.get('id_numero')} no existe.")
        
        cantidad = vals.get('cantidad', 0.0)  

        zpl = f"""
        ^XA
        ^FO50,50 
        ^B3N,N,100,Y,N
        ^FD>: {codigo.name}^FS 
        ^FO50,200
        ^A0N,50,50
        ^FDNumero: {numero.name}^FS  
        ^FO50,300
        ^A0N,50,50
        ^FDCantidad: {cantidad}^FS
        ^FO50,400
        ^GB800,3,3^FS            
        ^XZ
        """
        return zpl



    @api.model
    def create_and_generate_zpl(self, vals):
        if isinstance(vals, list):
            vals = vals[0] 
        if isinstance(vals, models.BaseModel):
            vals = vals.read()[0] 
        zpl = self.generate_zpl_label(vals) 
        return {
            'type': 'ir.actions.act_window',
            'res_model': 'product.extension.wizard',
            'view_mode': 'form',
            'view_type': 'form',
            'target': 'new',
            'context': {'default_zpl_content': zpl},
        }



y la siguiente vista

<odoo>
    <data>
        <record id="view_product_extension_form_zpl" model="ir.ui.view">
            <field name="name">product.extension.form.zpl</field>
            <field name="model">product.extension.wizard</field>
            <field name="arch" type="xml">
                <form string="Generar Etiqueta ZPL">
                    <sheet>
                        <group>
                            <field name="id_codigo"/>
                            <field name="id_numero"/>
                            <field name="cantidad"/>
                        </group>
                        <group>
                            <field name="zpl_content" readonly="1" nolabel="1" widget="text"/>
                        </group>
                        <footer>
                            <button string="Cancelar" class="btn-secondary" special="cancel"/>
                            <button string="Visualizar Etiqueta" type="object" name="create_and_generate_zpl" class="btn-default" context="{'close_on_report_download': False}"/>
                        </footer>
                    </sheet>
                </form>
            </field>
        </record>

        <record id="action_generate_zpl_label" model="ir.actions.act_window">
            <field name="name">Generar Etiqueta ZPL</field>
            <field name="res_model">product.extension.wizard</field>
            <field name="view_mode">form</field>
            <field name="view_id" ref="view_product_extension_form_zpl"/>
            <field name="target">new</field>
        </record>

        <menuitem id="menu_product_extension" name="Generar Etiqueta" parent="stock.menu_stock_inventory_control" action="action_generate_zpl_label" sequence="10"/>
    </data>
</odoo>


el siguiente archivo security

id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_product_codigo,access_product_codigo,model_product_codigo,,1,1,1,1
access_product_numero,access_product_numero,model_product_numero,,1,1,1,1
access_product_cantidad,access_product_cantidad,model_product_cantidad,,1,1,1,1
access_product_extension_wizard,access_product_extension_wizard,model_product_extension_wizard,,1,1,1,1


y el siguiente manifest

{
    'name': 'Etiquetas ZPL',
    'version': '1.0',
    'summary': 'Modulo para generar etiquetas ZPL',
    'description': ' etiquetas ZPL.',
    'author': 'MarcoAG',
    'depends': ['product', 'stock'],
    'data': [
        'security/ir.model.access.csv',
        'views/inv_model_views.xml',
    ],
    'installable': True,
    'application': True,
}

